services:

  # Database
  dev-db:
    image: postgres:latest
    container_name: video-streaming-db
    volumes:
      - postgres-db:/data/postgres
    restart: unless-stopped
    ports:
      - "5430:5432" # host port : internal service port
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - app-network

  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:3.6.9-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "5673:5672"
      - "15672:15672"
    networks:
      - app-network

  # Web server
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: video-streaming-backend
    restart: unless-stopped
    command: sh ./run_web.sh
    volumes:
      - .:/app
      - ./media:/app/media
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
    networks:
      - app-network
    depends_on:
      - dev-db

  # Celery worker
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
    command: sh ./run_celery.sh
    volumes:
      - .:/app
    depends_on:
      - rabbit
      - dev-db
    networks:
      - app-network

networks:
  app-network:

volumes:
  postgres-db: